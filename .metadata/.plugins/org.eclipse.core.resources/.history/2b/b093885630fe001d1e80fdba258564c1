package front;

import entidades.Cliente;
import negocio.Negocio;
import persistencia.ClientePersistencia;

public class AppCliente {
	public AppCliente() {

		int op;

		do {
			System.out.println("\n\n-------- PAINEL DE CLIENTE --------");
			System.out.println("[1] - Cadastrar cliente");
			System.out.println("[2] - Listar clientes");
			System.out.println("[3] - Consultar cliente");
			System.out.println("[4] - Alterar cliente");
			System.out.println("[5] - Excluir cliente");
			System.out.println("[6] - Voltar");
			op = Console.readInt("Selecione uma opcao: ");

			switch(op) {
			case 1:
				incluirCliente();
				break;
			case 2:
				break;
			case 3:
				consultarCliente();
				break;
			case 4:
				break;
			case 5:
				excluirCliente();
				break;
			default:
				System.out.println("Opcao invalida!");
			}
			
		} while (op != 6);
	}
	
	private static void incluirCliente() {
		System.out.println("\n\n|-| CADASTRO DE CLIENTE |-|");
		Cliente objCliente = new Cliente();
		objCliente.setCpf(Console.readString("Informe o CPF do cliente: "));
		if(Negocio.validarCPF(objCliente.getCpf()) != false) {
			objCliente.setNome(Console.readString("Informe o nome do cliente: "));
			// Método para procurar no banco se já existe cliente cadastrado com esse CPF
			objCliente.setContato(Console.readString("Informe o numero de contato do cliente: "));
			objCliente.setEndereco(Console.readString("Informe o endereco do cliente: "));
			ClientePersistencia.incluir(objCliente);
			System.out.println("Cliente cadastrado com sucesso.");
		} else {
			System.out.println("CPF invalido!");
		}
	}
	
	private static Cliente consultarCliente(Cliente objCliente) {
		return objCliente;
	}

}